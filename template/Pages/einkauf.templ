package pages

import (
	callbacks "github.com/computerextra/local-horst-golang/Callbacks"
	layout "github.com/computerextra/local-horst-golang/template/Layout"
	"strings"
	"time"
)

templ Einkauf(Einkauf []callbacks.Einkauf) {
	@layout.Base("Einkaufsliste") {
		<div>
			<h1 class="text-2xl text-center print:hidden">Einkaufsliste</h1>
			<h1 class="screen:hidden print:text-center print:text-3xl print:font-extrabold print:text-black">Post Mitnehmen!</h1>
			<div class="mx-auto mt-4 max-w-[80%]">
				<button class="px-4 py-2 bg-gray-600 rounded-xl print:hidden" onclick="window.print()">Drucken</button>
				<div class="relative w-full overflow-auto">
					<table class="w-full caption-bottom text-sm">
						<thead class="[&_tr]:border-b">
							<tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
								<th class="h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">Wer</th>
								<th class="h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">Geld</th>
								<th class="h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">Pfand</th>
								<th class="h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px] print:hidden">Abo</th>
								<th class="h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">Was</th>
								<th class="h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">Bilder</th>
							</tr>
						</thead>
						<tbody class="[&_tr:last-child]:border-0">
							for _, item := range Einkauf {
								if item.Name.Valid && item.Dinge.Valid {
									if (item.Abgeschickt.Valid && strings.Split(item.Abgeschickt.String, " ")[0] == strings.Split(time.Now().Format(time.RFC3339Nano), "T")[0]) || (item.Abonniert.Valid && item.Abonniert.Bool) {
										<tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
											<td class="p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px] font-medium">
												{ item.Name.String }
											</td>
											<td class="p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">
												if item.Paypal.Valid && item.Paypal.Bool {
													<span class="text-red-600">Paypal</span>
												} else {
													if item.Geld.Valid {
														{ item.Geld.String }
													}
												}
											</td>
											<td class="p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">
												if item.Pfand.Valid {
													{ item.Pfand.String }
												}
											</td>
											<td class="p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px] print:hidden">
												if item.Abonniert.Valid {
													if item.Abonniert.Bool {
														✔️
													} else {
														❌
													}
												}
											</td>
											<td class="p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">
												if item.Dinge.Valid {
													<ul style="list-style-type: none; padding: 0px;">
														for _, x := range strings.Split(item.Dinge.String, "\n") {
															<li>{ x }</li>
														}
													</ul>
												}
											</td>
											<td class="p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]">
												<div class="grid screen:grid-cols-3 print:grid-cols-1">
													if item.Bild1.Valid {
														<img class="object-contain rounded-xl" height="150" width="150" style="color: transparent; max-height: 200px; width: auto;" src={ item.Bild1.String } alt={ "Bild1_" + item.Id.String }/>
													}
													if item.Bild2.Valid {
														<img class="object-contain rounded-xl" height="150" width="150" style="color: transparent; max-height: 200px; width: auto;" src={ item.Bild2.String } alt={ "Bild2_" + item.Id.String }/>
													}
													if item.Bild3.Valid {
														<img class="object-contain rounded-xl" height="150" width="150" style="color: transparent; max-height: 200px; width: auto;" src={ item.Bild3.String } alt={ "Bild3_" + item.Id.String }/>
													}
												</div>
											</td>
										</tr>
									}
								}
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	}
}
